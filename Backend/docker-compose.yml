version: '3.8'

services:
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://rider:rider@db:5432/ride
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - MNOTIFY_API_KEY=${MNOTIFY_API_KEY}
      - SENDER_ID=${SENDER_ID}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./app:/app/app
      - uv-cache:/root/.cache/uv  # Cache uv packages
    networks:
      - ride-network
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=rider
      - POSTGRES_PASSWORD=rider
      - POSTGRES_DB=ride
    
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ride-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rider -d ride"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - ride-network
    restart: unless-stopped

volumes:
  postgres_data:
  uv-cache:  # Volume for uv package cache

networks:
  ride-network:
    driver: bridge 